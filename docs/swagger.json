{
  "openapi": "3.0.1",
  "info": {
    "title": "M & O bank",
    "version": "1.0.0",
    "description": "Bank api",
    "contact": {
      "email": "maarja.tapsi@khk.ee"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "http://petstore.swagger.io/v2"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistered"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Error description here"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "operationId": "createUser",
        "summary": "Create user",
        "description": "Creates a new user"
      }
    },
    "/sessions": {
      "post": {
        "requestBody": {
          "description": "User credentials used for log in",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "sessions"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Error description here"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "operationId": "login",
        "summary": "Creates a user session (log in)"
      },
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyType"
              }
            }
          },
          "required": true
        },
        "tags": [
          "sessions"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "tokenDeleted": {
                    "value": {
                      "message": "Token successfully deleted"
                    }
                  }
                }
              }
            },
            "description": "Session deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "Authorize": []
          }
        ],
        "summary": "Deletes a user session (log out)"
      }
    }
  },
  "components": {
    "schemas": {
      "SessionRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "user1",
          "password": "test"
        }
      },
      "SessionResponse": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "example": {
          "token": "5f9820e487dae20838fb4b13"
        }
      },
      "ErrorResponse": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "name",
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserRegistered": {
        "required": [
          "_id",
          "name",
          "username",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "example": {
          "user": {
            "_id": "23",
            "username": "user1",
            "token": "9f8e22760d6a96881f9450ce4fb82e27",
            "name": "Bob"
          }
        }
      },
      "bodyType": {
        "title": "Root Type for bodyType",
        "description": "",
        "type": "object",
        "example": {}
      }
    },
    "responses": {
      "UnauthorizedError": {
        "content": {
          "application/json": {
            "examples": {
              "Unauthorized": {
                "value": {
                  "error": "Error description here"
                }
              }
            }
          }
        },
        "description": "Access token is missing or invalid"
      }
    },
    "securitySchemes": {
      "Authorize": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}