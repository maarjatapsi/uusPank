openapi: 3.0.2
info:
  title: M & O bank
  version: 1.0.0
  description: Bank api
  contact:
    email: maarja.tapsi@khk.ee
servers:
  -
    url: 'http://localhost:3000'
paths:
  /users:
    post:
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userRegistered'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                error: Error description here
          description: Bad request
      operationId: createUser
      summary: Create user
      description: Creates a new user
  /sessions:
    post:
      requestBody:
        description: User credentials used for log in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessionRequest'
        required: true
      tags:
        - sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                error: Error description here
          description: Bad request
      operationId: login
      summary: Creates a user session (log in)
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyType'
        required: true
      tags:
        - sessions
      responses:
        '200':
          content:
            application/json:
              examples:
                tokenDeleted:
                  value:
                    message: Token successfully deleted
          description: Session deleted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        -
          Authorize: []
      summary: Deletes a user session (log out)
  /users/account:
    get:
      requestBody:
        content:
          application/json: {}
        required: false
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAccount'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                invalidToken:
                  value:
                    error: Invalid token
                missingAuthorizationheader:
                  value:
                    error: Missing Authorization header
          description: Missing token
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                accountNotFound:
                  value:
                    error: Account not found
                userNotFound:
                  value:
                    error: User not found
          description: Account not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                serverError:
                  value:
                    error: Error description here
          description: Server Error
      security:
        -
          Authorize: []
      summary: Shows users account info
      description: Gets users account info
  /transactions:
    get:
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
              examples:
                transactionHistory:
                  value:
                    transactions:
                      createdAt: '2020-11-10T10:19:25.777Z'
                      status: completed
                      _id: 5faa692e8d2a8d4e50953be0
                      userId: 5f994c778d48d50ad41c9618
                      amount: 100
                      currency: EUR
                      accountFrom: 65b238383569286925
                      accountTo: f6b952926464422664
                      explanation: test
                      statusDetail: ''
                      senderName: string
                      __v: 0
          description: Returns an array of user's transactions
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                invalidToken:
                  value:
                    error: Invalid token
          description: Invalid token
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                noLoggedTransctions:
                  value:
                    error: You have no logged transactions
          description: No logged transactions
      security:
        -
          Authorize: []
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transactionRequest'
            examples:
              createTransaction:
                value:
                  accountFrom: EE2860832851762801
                  accountTo: EE2798567388301682
                  amount: 100
                  explanation: test
        required: true
      tags:
        - transactions
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
              examples:
                successfulTransaction:
                  value:
                    message: Transaction created successfully
          description: Transaction created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                invalidAmount:
                  value:
                    error: Invalid amount
                invalidAccountTo:
                  value:
                    error: Invalid accountTo
          description: Invalid amount
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                missingAuthorizationHeader:
                  value:
                    error: Missing Authorization header
          description: Missing token
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                insufficientFunds:
                  value:
                    error: Insufficient funds
          description: Insufficent funds
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                forbidden:
                  value:
                    error: Forbidden
          description: The accountFrom does not belong to the user
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                accountNotFound:
                  value:
                    error: Account not found
          description: Account not found
      security:
        -
          Authorize: []
  /transactions/b2b:
    post:
      tags:
        - transactions
      responses:
        '200':
          description: Succesfully received transaction
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                parsingJWTFailed:
                  value:
                    error: 'Parsing JWT payload failed: reason here'
          description: Returns the errors specified
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                accountNotFound:
                  value:
                    error: Account not found
          description: Account not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                cannotVerifySignature:
                  value:
                    error: 'Cannot verify your signature: The jwksUrl of your bank is missing'
          description: "Cannot verify your signature: The jwksUrl of your bank is missing\r\n"
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                centralBankError:
                  value:
                    error: 'Central Bank error: reason here'
          description: Central Bank error
  /transactions/jwks:
    get:
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keys'
              examples:
                keys:
                  value:
                    keys:
                      -
                        kty: RSA
                        kid: uzDlPavO-uyJwXO5sHYA7sVeZ6dXHEYI2-AcHi2tTfA
                        'n': >-
                          Uw3RoZP869toe9VHfyIdjYue4n59mq3hxY7MjqLl3LjVZyPPDcTMlIxjE4NucYH7snTYVImLoERJgMX_YpT2SwmAhlS2LqrMysKW6QjYedirdYCK7zERWLxLVjCfZEcqQIY8rP1o3_-4FDHROOV_jnhNBRU2wtZZUtyQTTokV78
                        e: AQAB
          description: Responds with a JWKS key
components:
  schemas:
    bodyType:
      title: Root Type for bodyType
      description: ''
      type: object
      example: {}
    userAccount:
      title: Root Type for userAccount
      description: ''
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        account:
          type: array
          items:
            type: object
            properties:
              account_number:
                type: string
              balance:
                format: int32
                type: integer
              currency:
                type: string
      example:
        name: string
        username: user1
        account:
          -
            account_number: EE2798567388301682
            balance: 20000
            currency: EUR
    invalidToken:
      title: Root Type for invalidToken
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: Invalid token
    successfulResponse:
      description: ''
      required:
        - successful
        - successfulHistory
      type: object
      properties:
        successful:
          description: Successful response
          type: string
        successfulHistory:
          description: "{\r\n  \"transactions\": {\r\n    \"createdAt\": \"2020-11-10T10:19:25.777Z\",\r\n    \"status\": \"completed\",\r\n    \"_id\": \"5faa692e8d2a8d4e50953be0\",\r\n    \"userId\": \"5f994c778d48d50ad41c9618\",\r\n    \"amount\": 100,\r\n    \"currency\": \"EUR\",\r\n    \"accountFrom\": \"65b238383569286925\",\r\n    \"accountTo\": \"f6b952926464422664\",\r\n    \"explanation\": \"test\",\r\n    \"statusDetail\": \"\",\r\n    \"senderName\": \"string\",\r\n    \"__v\": 0\r\n  }\r\n}"
          type: string
    errorResponse:
      required:
        - error
      type: object
      properties:
        error:
          type: string
    sessionRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: user1
        password: test
    sessionResponse:
      required:
        - user
      type: object
      properties:
        token:
          type: string
      example:
        token: 5f9820e487dae20838fb4b13
    transactionRequest:
      title: Root Type for TransactionRequest
      description: ''
      type: object
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        amount:
          format: int32
          type: integer
        explanation:
          type: string
      example:
        accountFrom: EE2860832851762801
        accountTo: EE2798567388301682
        amount: 100
        explanation: test
    user:
      required:
        - name
        - username
        - password
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        password:
          type: string
    userRegistered:
      required:
        - _id
        - name
        - username
        - password
        - token
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        username:
          type: string
        password:
          type: string
        token:
          type: string
      example:
        user:
          _id: '23'
          username: user1
          token: 9f8e22760d6a96881f9450ce4fb82e27
          name: Bob
    keys:
      title: keys
      description: ''
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            properties:
              kty:
                type: string
              kid:
                type: string
              'n':
                type: string
              e:
                type: string
      example:
        keys:
          -
            kty: RSA
            kid: uzDlPavO-uyJwXO5sHYA7sVeZ6dXHEYI2-AcHi2tTfA
            'n': >-
              Uw3RoZP869toe9VHfyIdjYue4n59mq3hxY7MjqLl3LjVZyPPDcTMlIxjE4NucYH7snTYVImLoERJgMX_YpT2SwmAhlS2LqrMysKW6QjYedirdYCK7zERWLxLVjCfZEcqQIY8rP1o3_-4FDHROOV_jnhNBRU2wtZZUtyQTTokV78
            e: AQAB
  responses:
    UnauthorizedError:
      content:
        application/json:
          examples:
            Unauthorized:
              value:
                error: Error description here
      description: Access token is missing or invalid
  securitySchemes:
    Authorize:
      scheme: bearer
      type: http
